package com.javaquasar.java.core.chapter_03_Operators.bitwise;

/**
 * Created by Java Quasar on 16.05.17.
 */
/*Как реализовать умножение используя оператор сложения (+) и 
 * битовые операции так, чтобы оно происходило быстрее чем 
 * просто последовательное сложение?*/

public class BitMultiplication {

	public static void main(String[] args) {
		System.out.println(5 * 7);
		System.out.println((5 << 2) + (5 << 1) + 5);
	}
}
/*Битовая операция << (сдвиг влево) на каждом шаге увеличивает операнд вдвое. 
 * Произведение А*Б можно заменить произведением А на сумму степеней числа 2. 

Например:
5 * 7 = 5 * (4 + 2 + 1) = 5 * (2^2 + 2^1 + 2^0) = 
(5 * 2^2) + (5 * 2^1) + (5 * 2^0) 
Разложить число на множители легко из двоичной формы:
7 = 111 (активные биты: 0, 1 и 2)

Х * 2^Y = X << Y (Битовая операция сдвига)

Следовательно:
5*7 = (5 << 2) + (5 << 1) + 5 = 20 + 10 + 5 = 35

В итоге, вместо 6 операций сложения мы получили 2 операции сдвига и 2 операции сложения.*/
