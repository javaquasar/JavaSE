package com.javaquasar.java.core.chapter_12_Generics.example.gen_01_bad_code.decision;

/**
 * Created by Java Quasar on 16.05.17.
 */

/*
Эти проблемы решает появившаяся в Java 5 синтаксическая конструкция, так называемое обобщение – конструкция, включающая
в себя параметр класса или функции, который содержит дополнительную информацию о типе элементов и других данных.
Этот параметр берут в угловые скобки. Обобщение предоставляют возможность создания и использования структур данных,
безопасных с точки зрения типов. Классы, описание которых содержит такой параметр, называются обобщенными.
При создании объекта обобщенного типа в угловых скобках указывают имена реальных типов.
Можно использовать только типы ссылок. Предыдущий пример можно реализовать с применением обобщений.
 */
public class Pair<T> {
    T first, second;

    public Pair(T first, T second) {
        this.first = first;
        this.second = second;
    }

    public static void main(String[] args) {
        Pair<String> p = new Pair<String>("Фамилия", "Имя");
        String s = p.first; // Получаем строку без приведения типов
        Pair<Integer> p1 = new Pair<Integer>(1, 2); // Можно использовать целые константы
        int i = p1.second;  // Получаем целое значение без приведения типов

        /*
        Примечание: Java 7 позволяет не повторять фактический параметр обобщения после имени конструктора. Например:
         */
        Pair<Integer> p3 = new Pair<>(1, 2);

        /*
        Если мы пытаемся добавить к паре данные различных типов, компилятор сгенерирует ошибку.
        Ошибочной является также попытка явно преобразовать тип:
         */

        Pair<String> p4 = new Pair<String>("1", "2");
        //Integer i = (Integer) p4.second; // ошибка компиляции

        /*
        Тип данных с параметром в угловых скобках (например, Pair<String>) называется параметризованным типом.

        Обобщения реально существуют только на уровне исходного кода.
        Фактически в полях класса хранятся ссылки на Object.
        Информация о типе используется компилятором для контроля и автоматического приведения типов в исходном тексте.
         */
    }
}
